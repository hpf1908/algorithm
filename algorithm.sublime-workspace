{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sp",
				"spantResult"
			],
			[
				"ma",
				"matris"
			],
			[
				"ve",
				"vertexs"
			],
			[
				"v",
				"vertexs"
			],
			[
				"id",
				"id"
			],
			[
				"ini",
				"initialIdsMap"
			],
			[
				"in",
				"index"
			],
			[
				"pro",
				"prototype"
			],
			[
				"ed",
				"edges"
			],
			[
				"add",
				"addEdges"
			],
			[
				"ver",
				"vertexs"
			],
			[
				"getou",
				"getOuputAdjById"
			],
			[
				"get",
				"getInputAdjById"
			],
			[
				"ch",
				"checkIndex"
			],
			[
				"ad",
				"AdjMatris"
			],
			[
				"vert",
				"vertex"
			],
			[
				"pr",
				"prototype"
			],
			[
				"ge",
				"getOuputRouteByIndex"
			],
			[
				"p",
				"prototype"
			],
			[
				"fr",
				"from"
			],
			[
				"to",
				"toId"
			],
			[
				"ti",
				"title"
			],
			[
				"le",
				"length"
			],
			[
				"co",
				"codes"
			],
			[
				"ou",
				"ouputStr"
			],
			[
				"fo",
				"for	for (…) {…}"
			],
			[
				"code",
				"codesTable"
			],
			[
				"ta",
				"tailStart"
			],
			[
				"len",
				"length"
			],
			[
				"wei",
				"weight"
			],
			[
				"min",
				"minIndex2"
			],
			[
				"ne",
				"minNode2"
			],
			[
				"me",
				"mergeNode2"
			],
			[
				"mer",
				"mergeNode1"
			],
			[
				"no",
				"node1"
			],
			[
				"node",
				"node2"
			],
			[
				"ri",
				"rightChildLen"
			],
			[
				"de",
				"debugger"
			],
			[
				"r",
				"rightChildLen"
			],
			[
				"lef",
				"leftChildLen"
			],
			[
				"pa",
				"parentStack"
			],
			[
				"del",
				"delParentNode"
			],
			[
				"pc",
				"pC"
			],
			[
				"not",
				"notAvlHead"
			],
			[
				"avl",
				"avlRLAdjust"
			],
			[
				"nt",
				"notAvlHeadParent"
			],
			[
				"fa",
				"findFlag"
			],
			[
				"l",
				"leftChild"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"bi",
				"binaryNode5"
			],
			[
				"fl",
				"flagStack"
			],
			[
				"c",
				"callback"
			],
			[
				"f",
				"function"
			],
			[
				"remo",
				"removeChild"
			],
			[
				"rem",
				"removeChildAt"
			],
			[
				"chi",
				"child"
			],
			[
				"te",
				"tempNodeR"
			],
			[
				"he",
				"head"
			],
			[
				"res",
				"result"
			],
			[
				"req",
				"request"
			],
			[
				"rq",
				"Request"
			],
			[
				"requ",
				"Request"
			],
			[
				"sy",
				"syncFile"
			],
			[
				"re",
				"reload"
			],
			[
				"wa",
				"watcher"
			],
			[
				"fi",
				"filter"
			],
			[
				"ca",
				"cache"
			],
			[
				"cr",
				"createJs"
			],
			[
				"tim",
				"time"
			],
			[
				"sea",
				"seajs"
			],
			[
				"lo",
				"logger"
			],
			[
				"m",
				"mname"
			],
			[
				"wat",
				"watch"
			],
			[
				"tmp",
				"tmpl"
			],
			[
				"ex",
				"extend"
			],
			[
				"la",
				"languagesMap"
			],
			[
				"find",
				"findOneAsync"
			],
			[
				"us",
				"used"
			],
			[
				"topi",
				"topicRel"
			],
			[
				"t",
				"type"
			],
			[
				"ac",
				"actived"
			],
			[
				"acti",
				"active"
			],
			[
				"cO",
				"Comment"
			],
			[
				"fin",
				"findOneAsync"
			],
			[
				"comm",
				"comment"
			],
			[
				"ei",
				"editorElm"
			],
			[
				"sho",
				"showTip"
			],
			[
				"sav",
				"saveBtn"
			],
			[
				"opt",
				"opts"
			],
			[
				"op",
				"options"
			],
			[
				"s",
				"String"
			],
			[
				"u",
				"ul	Tag"
			],
			[
				"ite",
				"items"
			],
			[
				"use",
				"usersMap"
			],
			[
				"fun",
				"function"
			],
			[
				"h",
				"h3	Tag"
			],
			[
				"i",
				"Item"
			],
			[
				"U",
				"Useritem"
			],
			[
				"a",
				"await"
			],
			[
				"fu",
				"function"
			],
			[
				"ai",
				"apikey"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/**\n * 图的邻接矩阵表示\n */\nvar Vertex = function(id , title) {\n	this.title = title;\n	this.id = id;\n}\n\n/**\n * 输入参数：顶点, 顶点偶对\n */\nvar Edge = function(from , to, weight) {\n	this.fromId = from;\n	this.toId   = to;\n	this.weight = weight;\n}\n\nvar AdjMatris = function(vertexs , edges) {\n\n	this.idsMap = {};\n	this.vertexs = vertexs;\n	this.edges = edges;\n	this.matris = [];\n\n	this.initialize();\n	this.addEdges(edges);\n}\n\nAdjMatris.prototype.initialize = function(){\n\n	var matris = this.matris;\n	var vertexs = this.vertexs;\n	var martisNum = this.vertexs.length;\n\n	//初始化idmap\n	this.initialIdsMap(0);\n\n	for (var i = 0; i < martisNum; i++) {\n		matris[i] = [];\n		for (var j = 0; j < martisNum; j++) {\n			matris[i][j] = Number.MAX_VALUE;\n		}\n	}\n}\n\nAdjMatris.prototype.id2Index = function(id) {\n	return this.idsMap[id] == undefined ? -1 : this.idsMap[id];\n}\n\nAdjMatris.prototype.checkIndex = function(index) {\n	return index >=0 && index < this.vertexs.length;\n}\n\nAdjMatris.prototype.checkVertex = function(vertex) {\n	return vertex && vertex.id;\n}\n\nAdjMatris.prototype.getOuputAdjById = function(id) {\n	var index = this.id2Index(id);\n	return index < 0 ? [] : this.getOuputAdjByIndex(index);\n}\n\nAdjMatris.prototype.initialIdsMap = function(start) {\n	for (var i = start; i < this.vertexs.length; i++) {\n		var vertex = this.vertexs[i];\n		this.idsMap[vertex.id] = i;\n	}\n}\n\nAdjMatris.prototype.getOuputAdjByIndex = function(index) {\n\n	var res = [];\n	var fMartis = this.matris[index];\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		if(fMartis && fMartis[i] != Number.MAX_VALUE && this.vertexs[i]) {\n			res.push(this.vertexs[i]);\n		}\n	};\n	return res;\n}\n\nAdjMatris.prototype.getInputAdjById = function(id) {\n	var index = this.id2Index(id);\n	return index < 0 ? [] : this.getOuputAdjByIndex(index);\n}\n\nAdjMatris.prototype.getInputAdjByIndex = function(index) {\n\n	var res = [];\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var fMartis = this.matris[i];\n		if(fMartis && fMartis[index] != Number.MAX_VALUE && this.vertexs[i]) {\n			res.push(this.vertexs[i]);\n		}\n	};\n	return res;\n}\n\nAdjMatris.prototype.getAdjsById = function(id) {\n	var inputs  = this.getInputAdjById(id);\n	var outputs = this.getOuputAdjById(id);\n	return inputs.concat(outputs);\n}\n\nAdjMatris.prototype.addAdj = function(vertex) {\n	for (var i = 0; i < this.vertexs.length - 1; i++) {\n		this.matris[i].push(Number.MAX_VALUE);\n	}\n\n	var arr = [];\n	this.vertexs.push(vertex);\n	for (var i = 0; i < this.vertexs.length; i++) {\n		arr.push(Number.MAX_VALUE);\n	}\n	this.matris.push(arr);\n}\n\nAdjMatris.prototype.addEdges = function(edges) {\n	for (var i = 0; i < edges.length; i++) {\n		this.addEdge(edges[i]);\n	}\n}\n\nAdjMatris.prototype.addEdge = function(edge) {\n	var from = this.id2Index(edge.fromId);\n	var to   = this.id2Index(edge.toId);\n	if(this.checkIndex(from) && this.checkIndex(to)) {\n		this.matris[from][to] = edge.weight;\n	}\n}\n\n//删除边信息只是将标志位清除，不是实际删除节点\nAdjMatris.prototype.delEdgesById = function(id) {\n	var index = this.id2Index(id);\n	if(this.checkIndex(index)) {\n		var hMatris = this.matris[index];\n		for (var i = 0; i < this.vertexs.length; i++) {\n			hMatris[i] = Number.MAX_VALUE;\n		}\n\n		for (var i = 0; i < this.vertexs.length; i++) {\n			hMatris = this.matris[i];\n			hMatris[index] = Number.MAX_VALUE; \n		};\n	} \n}\n\nAdjMatris.prototype.delVertexById = function(id) {\n	var index = this.id2Index(id);\n	if(this.checkIndex(index)) {\n		var hMatris;\n\n		//先删除列\n		for (var i = 0; i < this.vertexs.length; i++) {\n			hMatris = this.matris[i];\n			hMatris.splice(index);\n		}\n		//再删除行\n		this.matris.splice(index);\n		//再删除节点\n		this.vertexs.splice(index);\n		//重新设置节点\n		this.initialIdsMap(index);\n	}\n}\n\n/**\n * 图的深度优先遍历\n */\nAdjMatris.prototype.travelDFS = function(iterator) {\n\n	var visited = {};\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var vetex = this.vertexs[i];\n		visited[vetex.id] = false;\n	}\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var vetex = this.vertexs[i];\n		if(!visited[vetex.id]) {\n			this.DFS(visited , vetex.id , iterator);	\n		}\n	}\n}\n\nAdjMatris.prototype.DFS = function(visited , id , iterator) {\n\n	var outputs = this.getOuputAdjById(id);\n	var index = this.id2Index(id);\n\n	iterator && iterator(this.vertexs[index]);\n	visited[id] = true;\n\n	for (var i = 0; i < outputs.length; i++) {\n		var vetex = outputs[i];\n		if(!visited[vetex.id]) {\n			this.DFS(visited , vetex.id, iterator);\n		}\n	}\n}\n\n/**\n * 图的广度优先遍历\n */\nAdjMatris.prototype.travelBFS = function(iterator) {\n	var visited = {};\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var vetex = this.vertexs[i];\n		visited[vetex.id] = false;\n	}\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var vetex = this.vertexs[i];\n		if(!visited[vetex.id]) {\n			this.BFS(visited , vetex.id , iterator);	\n		}\n	}\n}\n\nAdjMatris.prototype.BFS = function(visited , id , iterator) {\n\n	var index = this.id2Index(id);\n	var queue = new Queue();\n\n	iterator && iterator(this.vertexs[index]);\n	visited[id] = true;\n	queue.enQueue(id);\n\n	while(!queue.empty()) {\n		var vetexId = queue.deQueue();\n		var outputs = this.getOuputAdjById(vetexId);\n\n		for (var i = 0; i < outputs.length; i++) {\n			var vetex = outputs[i];\n			if(!visited[vetex.id]) {\n				iterator(vetex);\n				visited[vetex.id] = true;\n				queue.enQueue(vetex.id);\n			}\n		}\n	}\n}\n\n/**\n * 判断无向图是否连通\n */\nAdjMatris.prototype.isAllConneced = function() {\n	var visited = {};\n\n	for (var i = 0; i < this.vertexs.length; i++) {\n		var vetex = this.vertexs[i];\n		visited[vetex.id] = false;\n	}\n\n	if(this.vertexs.length <= 0) {\n		return true;\n	}\n\n	var vetex = this.vertexs[0];\n	var count = 0;\n\n	this.BFS(visited , vetex.id , function() {\n		count++;\n	});	\n	return count == this.vertexs.length;\n}\n\n/**\n * 普里姆算法 - 求解无向图的最小生成树\n */\nAdjMatris.prototype.miniSpanPrim = function() {\n\n	var lowerCost = [], teends = [];\n	var spanResult = [];\n	var spanCost = 0;\n\n	lowerCost[0] = 0;\n	teends[0] = 0;\n\n	for (var i = 1; i < this.vertexs.length; i++) {\n		teends[i] = 0;\n		lowerCost[i] = this.matris[0][i];\n	}\n\n	for (var i = 1; i < this.vertexs.length; i++) {\n		var miniCost = Number.MAX_VALUE;\n		var j = 1 , k;\n\n		while(j < this.vertexs.length) {\n			if(lowerCost[j] > 0 && miniCost > lowerCost[j]) {\n				miniCost = lowerCost[j];\n				k = j;\n			}\n			j++;\n		}\n\n		var from = this.vertexs[teends[k]];\n		var to = this.vertexs[k];\n\n		spanResult.push({\n			from : from,\n			to   : to,\n			cost : miniCost\n		});\n\n		spanCost+= miniCost;\n		lowerCost[k] = 0;\n\n		for (var j = 0; j < this.vertexs.length; j++) {\n			if(this.matris[k][j] < lowerCost[j])	{\n				lowerCost[j] = this.matris[k][j];\n				teends[j] = k;\n			}\n		}\n	}\n\n	return {\n		spanCost  : spanCost,\n		spanResult : spanResult\n	};\n}\n\n/**\n * 克鲁斯卡尔算法 - 求解无向图的最小生成树\n */\nAdjMatris.prototype.miniSpanKruskal = function() {\n\n	//先构造一个无边的网络存储当前的最小生成树\n	var miniAdjMatris = new AdjMatris(this.vertexs , []);\n\n\n}\n\n",
			"file": "graph/adjMatris.js",
			"file_size": 7043,
			"file_write_time": 1354418751000000,
			"settings":
			{
				"buffer_size": 6760,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/testGraph.js",
			"settings":
			{
				"buffer_size": 1705,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/hpf1908/projects/javascript/algorithm/test/testGraph.js",
		"/Users/hpf1908/projects/javascript/algorithm/graph/adjMatris.js",
		"/Users/hpf1908/projects/javascript/algorithm/test/testGraph.html",
		"/Users/hpf1908/projects/javascript/algorithm/queue/queue.js",
		"/Users/hpf1908/projects/javascript/algorithm/test/testGrapha.js",
		"/Users/hpf1908/projects/javascript/algorithm/matcher/kmpMatcher.js",
		"/Users/hpf1908/projects/javascript/algorithm/matcher/rabinKappMatcher.js",
		"/Users/hpf1908/projects/javascript/algorithm/link/linkList.js",
		"/Users/hpf1908/projects/algorithm/test/testTree.js",
		"/Users/hpf1908/projects/algorithm/tree/tree.js",
		"/Users/hpf1908/projects/algorithm/test/testTree.html",
		"/Users/hpf1908/projects/algorithm/tree/threadedBinaryTree.js",
		"/Users/hpf1908/projects/algorithm/tree/huffmanTree.js",
		"/Users/hpf1908/projects/algorithm/stack/hexadecimal.js",
		"/Users/hpf1908/projects/algorithm/tree/binaryTree.js",
		"/Users/hpf1908/projects/algorithm/tree/sortBinaryTree.js",
		"/Users/hpf1908/projects/algorithm/link/linkList.js",
		"/Users/hpf1908/projects/algorithm/sort/quick.js",
		"/Users/hpf1908/projects/algorithm/tree/avlBtree.js",
		"/Users/hpf1908/projects/algorithm/test/testStack.js",
		"/Users/hpf1908/projects/algorithm/test/testLinkList.js",
		"/Users/hpf1908/projects/algorithm/test/testQueue.js",
		"/Users/hpf1908/projects/algorithm/test/testStack.html",
		"/Users/hpf1908/projects/algorithm/test/testQueue.html",
		"/Users/hpf1908/projects/algorithm/test/testLinkList.html",
		"/Users/hpf1908/projects/algorithm/sort/binaryInsert.js",
		"/Users/hpf1908/projects/algorithm/sort/heap.js",
		"/Users/hpf1908/projects/algorithm/tree/test.js",
		"/Users/hpf1908/projects/algorithm/tree/test.html",
		"/Users/hpf1908/projects/algorithm/tree/clueBinaryTree.js",
		"/Users/hpf1908/projects/algorithm/tree/clueBTree.js",
		"/Users/hpf1908/projects/algorithm/tree/clueBTree",
		"/Users/hpf1908/projects/algorithm/stack/stack.js",
		"/Users/hpf1908/projects/algorithm/queue/queue.js",
		"/Users/hpf1908/projects/algorithm/matcher/kmpMatcher.js",
		"/Users/hpf1908/projects/algorithm/matcher/rabinKappMatcher.js",
		"/Users/hpf1908/projects/algorithm/queue/test.js",
		"/Users/hpf1908/projects/algorithm/tree/search.js",
		"/Users/hpf1908/projects/algorithm/queue/test.html",
		"/Users/hpf1908/projects/algorithm/stack/test.js",
		"/Users/hpf1908/projects/algorithm/stack/test.html",
		"/Users/hpf1908/projects/algorithm/link/test.html",
		"/Users/hpf1908/projects/algorithm/link/test.js",
		"/Users/hpf1908/projects/algorithm/link/node.js",
		"/Users/hpf1908/projects/algorithm/sort/merge.js",
		"/Users/hpf1908/projects/algorithm/sort/select.js",
		"/Users/hpf1908/projects/algorithm/sort/shell.js",
		"/Users/hpf1908/projects/algorithm/sort/bubble.js",
		"/Users/hpf1908/projects/algorithm/sort/insert.js",
		"/Users/hpf1908/projects/algorithm/readme.md",
		"/Users/hpf1908/projects/gitsearch/views/home/page.html",
		"/Users/hpf1908/projects/gitsearch/app.js",
		"/Users/hpf1908/projects/gitsearch/controllers/page.js",
		"/Users/hpf1908/projects/gitsearch/node_modules/oauth/lib/oauth2.js",
		"/Users/hpf1908/projects/node-oauth/lib/oauth2.js",
		"/Users/hpf1908/projects/gitsearch/views/home/login_fail.html",
		"/Users/hpf1908/projects/gitsearch/views/home/login_success.html",
		"/Users/hpf1908/projects/codeMonkey/controllers/auth.js",
		"/Users/hpf1908/projects/codeMonkey/utils/params.js",
		"/Users/hpf1908/projects/codeMonkey/controllers/comment.js",
		"/Users/hpf1908/projects/geek/controllers/home.js",
		"/Users/hpf1908/projects/gitsearch/node_modules/oauth/index.js",
		"/Users/hpf1908/projects/gitsearch/routes.js",
		"/Users/hpf1908/projects/node-oauth/examples/express-gdata/server.js",
		"/Users/hpf1908/projects/gitsearch/node_modules/node-oauth/lib/oauth.js",
		"/Users/hpf1908/projects/gitsearch/node_modules/node-oauth/index.js",
		"/Users/hpf1908/projects/node-oauth/lib/oauth.js",
		"/Users/hpf1908/projects/node-oauth/tests/oauth2.js",
		"/Users/hpf1908/projects/node-oauth/Readme.md",
		"/Users/hpf1908/projects/node-oauth/examples/term.ie.oauth-PLAINTEXT.js",
		"/Users/hpf1908/projects/node-oauth/examples/term.ie.oauth-HMAC-SHA1.js",
		"/Users/hpf1908/projects/node-oauth/examples/express-gdata/views/google_contacts.ejs",
		"/Users/hpf1908/projects/node-oauth/examples/express-gdata/views/google_calendars.ejs",
		"/Users/hpf1908/projects/gitsearch/config.js",
		"/Users/hpf1908/projects/gitsearch/controllers/api.js",
		"/Users/hpf1908/projects/gitsearch/views/index.html",
		"/Users/hpf1908/projects/gitsearch/views/layouts/default.html",
		"/Users/hpf1908/projects/gitsearch/geek.sublime-project",
		"/Users/hpf1908/projects/gitsearch/extends/jsonApi.js",
		"/Users/hpf1908/projects/gitsearch/models/index.js",
		"/Users/hpf1908/projects/node-printrest/controllers/page.js",
		"/Users/hpf1908/projects/gitsearch/tests/getStatus.js",
		"/Users/hpf1908/projects/gitsearch/package.json",
		"/Users/hpf1908/projects/gitsearch/node-pintrest.sublime-workspace",
		"/Users/hpf1908/projects/gitsearch/geek.sublime-workspace",
		"/Users/hpf1908/projects/gitsearch/models/modelAsync.js",
		"/Users/hpf1908/projects/node-printrest/controllers/api.js",
		"/Users/hpf1908/projects/geek/app.js",
		"/Users/hpf1908/projects/geek/controllers/auth.js",
		"/Users/hpf1908/projects/node-oauth/index.js",
		"/Users/hpf1908/projects/node-oauth/tests/oauth.js",
		"/Users/hpf1908/projects/jsc/lib/index.js",
		"/Users/hpf1908/projects/jsc/lib/parser/js.js",
		"/Users/hpf1908/projects/jsc/lib/compress.js",
		"/Users/hpf1908/projects/jsc/lib/jsc.js",
		"/Users/hpf1908/projects/jsc/lib/parser/html.js",
		"/Users/hpf1908/projects/jsc/test/watcher/index.js",
		"/Users/hpf1908/projects/jsc/test/compress/test/sub/a.js",
		"/Users/hpf1908/projects/jsc/test/compress/test/a.js",
		"/Users/hpf1908/projects/jsc/lib/sync.js",
		"/Users/hpf1908/projects/jsc/lib/watcher.js",
		"/Users/hpf1908/projects/jsc/test/compress.js",
		"/Users/hpf1908/projects/jsc/test/compress/target/sub/a.js",
		"/Users/hpf1908/projects/jsc/test/compress/target/sub/b.js",
		"/Users/hpf1908/projects/jsc/test/compress/target/sub/c.js",
		"/Users/hpf1908/projects/jsc/test/compress/target/a.js",
		"/Users/hpf1908/projects/jsc/test/util.js",
		"/Users/hpf1908/projects/jsc/lib/util.js",
		"/Users/hpf1908/projects/jsc/lib/config.js",
		"/Users/hpf1908/projects/jsc/readme.md",
		"/Users/hpf1908/projects/jsc/test/sync/src/a.js",
		"/Users/hpf1908/projects/jsc/test/sync/index.js",
		"/Users/hpf1908/projects/jsc/test/sync/a.js",
		"/Users/hpf1908/projects/jsc/test/watcher/src/a.js",
		"/Users/hpf1908/projects/jsc/test/sync/src/c.js",
		"/Users/hpf1908/projects/jsc/test/sync/c.js",
		"/Users/hpf1908/projects/jsc/test/sync/b.js",
		"/Users/hpf1908/projects/jsc/test/sync/src/b.js",
		"/Users/hpf1908/projects/jsc/test/sync.js",
		"/Users/hpf1908/projects/jsc/test/files/a_copy.js",
		"/Users/hpf1908/projects/jsc/test/watcher.js",
		"/Users/hpf1908/projects/jsc/lib/queue.js",
		"/Users/hpf1908/projects/jsc/lib/templates/micro.js",
		"/Users/hpf1908/projects/jsc/index.js",
		"/Users/hpf1908/projects/jsc/test/ast/tmpl.js",
		"/Users/hpf1908/projects/jsc/test/module/tmpl.js",
		"/Users/hpf1908/projects/jsc/test/watcher/tmpl.js",
		"/Users/hpf1908/projects/jsc/node_modules/uglify-js/README.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"reverse",
			"initialIdsMap",
			"graph.js",
			"huffmanEncodeStringByTables",
			"encodeHuffumanCodes",
			"huffmanEncodeStringByTables",
			"getHuffmanCodes",
			"createHuffmanTree",
			"decodeHuffmanHeaderString",
			"huffmanDecodeStringByTables",
			"encodeHuffmanHeaderString",
			"huffmanDecodeStringByTables",
			"ceateHuffmanHeaderString",
			"huffmanEncodeStringByTables",
			"huffmanDecodeStringByTables",
			"decodeHuffumanCodes",
			"convertStringToBits",
			"decodeHuffumanCodes",
			"encodeHuffumanCodes",
			"createHuffumanCodes",
			"splice",
			"console",
			"checkIsNotAvlBTree",
			"			\n",
			"splice",
			"bearer",
			"token_type",
			"getOAuthAccessToken",
			"redirect",
			"action",
			"google_cb",
			"tmpl",
			"watcher",
			"callback",
			",\n	'test copy file' : function(){\n\n	}",
			"cache",
			"changeFile",
			"yes",
			"write",
			"relative",
			"listen",
			"ignoreRule",
			"before",
			"afterJS",
			"beforeJS",
			"filter",
			"seajsRoot",
			"document",
			"script",
			"test.js",
			"exports",
			"getTmplEngine",
			"console",
			"requires",
			"scope",
			"label",
			"body",
			"console",
			"getAllFiles",
			"getAllFile",
			"getFileListFromStdout",
			"_getAllFile",
			"getFileListFromStdout",
			"cp",
			"inputFolder",
			"folder",
			"console",
			"callback",
			"existsSync",
			"src",
			"filter",
			"config",
			"newFile",
			"checkChange",
			"getAllFile",
			"checkChange",
			"watchFiles",
			"getCodeFromFile",
			"exist",
			"console",
			"idmap",
			"regCode",
			"it",
			"watchFiles",
			"watch",
			"watchFiles",
			"watch",
			"listen",
			"ComboJS",
			"outputJS",
			"tmpl",
			"ComboJS",
			"console",
			"__getResult",
			"script",
			"parseHTML",
			"parse",
			"createHTML",
			"createALL",
			"parseHTML",
			"with",
			"nowith",
			"idmap",
			"__script",
			"getLog",
			"asyncLog",
			"isPointInPath",
			"detectionType",
			"detection",
			"saveData",
			"this.data",
			"savedata",
			"intersects",
			"savedata",
			"_draw",
			"_detectEvent",
			"saveData",
			"data",
			"saveData",
			"_listenDrag",
			"draggable",
			"saveData",
			"save",
			"savedata",
			"save",
			"circle1",
			"custom draw",
			"custom draw "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "graph/adjMatris.js",
					"settings":
					{
						"buffer_size": 6760,
						"regions":
						{
						},
						"selection":
						[
							[
								6316,
								6316
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4036.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test/testGraph.js",
					"settings":
					{
						"buffer_size": 1705,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								1075
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 438.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/hpf1908/projects/geek/geek.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 270.0,
	"status_bar_visible": true
}
